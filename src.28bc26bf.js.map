{"version":3,"sources":["index.js"],"names":["getFruit","name","fruits","strawberry","kiwi","apple","Promise","resolve","setTimeout","makeSmoothie","console","time","fruit","all","log","error","getSmoothie","then"],"mappings":";AAEA,SAASA,EAASC,GACVC,MAAAA,EAAS,CACbC,WAAY,cACZC,KAAM,cACNC,MAAO,eAGF,OAAA,IAAIC,QAAQC,GAAWC,WAAW,IAAMD,EAAQL,EAAOD,IAAQ,MAGxE,eAAeQ,IACP,IACAC,QAAQC,KAAK,gBAQPN,MAAAA,EAAQL,EAAS,SACjBI,EAAOJ,EAAS,QAChBG,EAAaH,EAAS,cAErBY,QAAcN,QAAQO,IAAI,CAACR,EAAOD,EAAMD,IAExCS,OADPF,QAAQI,IAAIF,GACLA,EAIT,MAAOG,GACPL,QAAQI,IAAIC,IAMlB,SAASC,IACPhB,EAAS,SAASiB,KAAKZ,IACrBK,QAAQI,IAAIT,GACZL,EAAS,QAAQiB,KAAKb,GAAQM,QAAQI,IAAIV,MAL9CK,IAAeQ,KAAKP,QAAQI","file":"src.28bc26bf.js","sourceRoot":"../src","sourcesContent":["//синтаксис async/await\n\nfunction getFruit(name) {\n  const fruits = {\n    strawberry: 'fresh berry',\n    kiwi: 'green fruit',\n    apple: 'red and big',\n  };\n\n  return new Promise(resolve => setTimeout(() => resolve(fruits[name]), 500));\n}\n\nasync function makeSmoothie() {\n    try {\n        console.time('makeSmoothie');\n/*         const apple = await getFruit('apple');\n        const kiwi = await getFruit('kiwi');\n        const strawberry = await getFruit('strawberry'); */\n        //console.log(apple)\n        // console.log(kiwi)\n        //console.log(strawberry)\n\n        const apple = getFruit('apple');\n        const kiwi = getFruit('kiwi');\n        const strawberry = getFruit('strawberry');\n\n         const fruit = await Promise.all([apple, kiwi, strawberry]);\n        console.log(fruit);\n        return fruit;\n\n        console.timeEnd('makeSmoothie');\n\n    } catch (error) {\n      console.log(error)\n    }\n}\n\nmakeSmoothie().then(console.log);\n\nfunction getSmoothie() {\n  getFruit('apple').then(apple => {\n    console.log(apple);\n    getFruit('kiwi').then(kiwi => console.log(kiwi));\n  });\n}\n"]}